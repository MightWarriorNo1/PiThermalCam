# This is a basic workflow to help you get started with Actions

name: Publish distribution 📦 to PyPI 🐍 on new release

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
    release: 
      types: [created]
    
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build-n-publish:
    name: Build and publish Python 🐍 distribution 📦 to PyPI
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.6]   #, 3.7, 3.8, 3.9] # These are redundant and cause errors on upload since it's a version-independent build

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
       # You can test your matrix by printing the current Python version
      - name: Display Python version
        run: python -c "import sys; print(sys.version)"  

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest setuptools wheel twine
# Don't think I actually need to install dependencies, and opencv would be quite large anyway
#          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings.
          flake8 . --count --exit-zero --statistics
          
# Included for the day when tests are added to the project
#       - name: Test with pytest
#         run: |
#           pytest

      - name: Install pypa/build
        run: >-
          python -m
          pip install
          build
          --user
           
      - name: Build a binary wheel and a source tarball
        run: >-
          python -m
          build
          --sdist
          --wheel
          --outdir dist/

      - name: Publish distribution 📦 to PyPI
        if: startsWith(github.ref, 'refs/tags')
        uses: pypa/gh-action-pypi-publish@master
        with:
          password: ${{ secrets.PROD_PYPI_API_TOKEN }}
